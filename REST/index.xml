<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>REST on Efficient-web-app-architecture</title><link>https://dwtechs.github.io/efficient-web-app-architecture/REST/</link><description>Recent content in REST on Efficient-web-app-architecture</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dwtechs.github.io/efficient-web-app-architecture/REST/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://dwtechs.github.io/efficient-web-app-architecture/REST/versioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-web-app-architecture/REST/versioning/</guid><description>It is important to make sure you don&amp;rsquo;t break the system for current consumers when you update your APIs. They need to be able to use it as usual while new consumers will use the new features. For this you need to version yout API. There are several ways to do so.
URI versioning Each time you modify the web API or change the schema of resources, you add a version number to the URI for each resource.</description></item><item><title>API</title><link>https://dwtechs.github.io/efficient-web-app-architecture/REST/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-web-app-architecture/REST/api/</guid><description>Overview A REST API (also known as RESTful API) is an Application Programming Interface that conforms to the constraints of REST architectural style and allows for interaction with RESTful web services. REST stands for REpresentational State Transfer and was created by Roy Fielding in 2000 who also co-founded the Apache HTTP Server project and has been heavily involved in the development of HTML.
What is an API An API helps you communicate with a system so it can understand and fulfill the request.</description></item><item><title>Design</title><link>https://dwtechs.github.io/efficient-web-app-architecture/REST/design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-web-app-architecture/REST/design/</guid><description>Overview A well-designed web API should aim to support two key principles:
Platform independence. Any client should be able to call the API, regardless of how the API is implemented internally. This requires using standard protocols, and having a mechanism whereby the client and the web service can agree on the format of the data to exchange.
Service evolution. The web API should be able to evolve and add functionality independently from client applications.</description></item><item><title>Operations</title><link>https://dwtechs.github.io/efficient-web-app-architecture/REST/operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-web-app-architecture/REST/operations/</guid><description>Define operations in terms of HTTP methods The HTTP protocol defines a number of methods that assign semantic meaning to a request. The common HTTP methods used by most RESTful web APIs are:
GET retrieves a representation of the resource at the specified URI. The body of the response message contains the details of the requested resource. POST creates a new resource at the specified URI. The body of the request message provides the details of the new resource.</description></item></channel></rss>